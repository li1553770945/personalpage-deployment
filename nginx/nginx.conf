user root;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    client_max_body_size 100m;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


    gzip on;
    gzip_min_length  5k;
    gzip_buffers     4 16k;
    gzip_comp_level 3;
    gzip_types       text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    server {
        listen       80;
        server_name  api.peacesheep.cn socket.peacesheep.cn;

        # 将所有请求重定向到 HTTPS
        return 301 https://$host$request_uri;
    }


    server {
        listen       443 ssl;
        server_name  api.peacesheep.cn;
        ssl_certificate     /srv/card/peacesheep.cn.pem;
        ssl_certificate_key /srv/card/peacesheep.cn.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location /api {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($http_origin ~* (https://peacesheep\.cn|https://www\.peacesheep\.cn)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

            }
            proxy_pass http://localhost:31900/api;
        }
    }

    server {
    listen       443 ssl;
    server_name  store.peacesheep.cn;

    ssl_certificate     /srv/card/peacesheep.cn.pem;
    ssl_certificate_key /srv/card/peacesheep.cn.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # 处理 OPTIONS 请求，用于 CORS 预检
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # 处理实际的请求，允许来自指定域的 CORS 请求
        if ($http_origin ~* (https://peacesheep\.cn|https://www\.peacesheep\.cn)) {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        }
        # 转发必要的请求头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        # 代理请求到后端服务
        proxy_pass http://localhost:30000;

        
    }
}


   server {
        listen       443 ssl;
        server_name  socket.peacesheep.cn;

        ssl_certificate     /srv/card/peacesheep.cn.pem;
        ssl_certificate_key /srv/card/peacesheep.cn.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location /connect {
            # 处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 允许跨域的前端域名
            if ($http_origin ~* (https://store.peacesheep\.cn)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            }

            # WebSocket 转发
            proxy_pass http://localhost:31901;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;

            # 长连接保持
            proxy_read_timeout 36000s;
            proxy_send_timeout 36000s;
            proxy_connect_timeout 60s;
            keepalive_timeout 36000s;
        }
    }


    server {
        listen       443 ssl;
        server_name  status.peacesheep.cn;
        ssl_certificate     /srv/card/peacesheep.cn.pem;
        ssl_certificate_key /srv/card/peacesheep.cn.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:31686;
        }
    }

    server {
        listen       443 ssl;
        server_name  metrics.peacesheep.cn;
        ssl_certificate     /srv/card/peacesheep.cn.pem;
        ssl_certificate_key /srv/card/peacesheep.cn.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:31690;
        }
    }
}
