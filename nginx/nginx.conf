
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen       80;
        server_name  api.peacesheep.xyz socket.peacesheep.xyz;

        # 将所有请求重定向到 HTTPS
        return 301 https://$host$request_uri;
    }


    server {
        listen       443 ssl;
        server_name  api.peacesheep.xyz,localhost;
        ssl_certificate     /etc/letsencrypt/live/peacesheep.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/peacesheep.xyz/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location /api {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($http_origin ~* (https://peacesheep\.xyz|https://www\.peacesheep\.xyz)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

            }
            proxy_pass http://localhost:31900/api;
        }
    }


   server {
        listen       443 ssl;
        server_name  socket.peacesheep.xyz;

        ssl_certificate     /etc/letsencrypt/live/peacesheep.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/peacesheep.xyz/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location /connect {
            # 处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 允许跨域的前端域名
            if ($http_origin ~* (https://store.peacesheep\.xyz)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            }

            # WebSocket 转发
            proxy_pass http://localhost:31901;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;

            # 长连接保持
            proxy_read_timeout 36000s;
            proxy_send_timeout 36000s;
            proxy_connect_timeout 60s;
            keepalive_timeout 36000s;
        }
    }


    server {
        listen       443 ssl;
        server_name  status.peacesheep.xyz;
        ssl_certificate     /etc/letsencrypt/live/peacesheep.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/peacesheep.xyz/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:31686;
        }
    }

    server {
        listen       443 ssl;
        server_name  metrics.peacesheep.xyz;
        ssl_certificate     /etc/letsencrypt/live/peacesheep.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/peacesheep.xyz/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:31690;
        }
    }

     server {
        listen       443 ssl;
        server_name  kuma.peacesheep.xyz;
        ssl_certificate     /etc/letsencrypt/live/peacesheep.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/peacesheep.xyz/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:30001;
        }
    }
}
